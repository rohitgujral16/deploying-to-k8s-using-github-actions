name: CI and Deployment Pipeline

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
      - 'production'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    jobs:
      - name: CI - Build and Push to Registry
        if: github.event_name == 'pull_request'
        steps:
          - name: Check our repository
            uses: actions/checkout@v3

          - name: testing ruby
            run: echo "This is test" #ruby test

          - name: Login to Docker hub
            uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Get short commit hash
            id: commit_hash
            run: echo "::set-output name=hash::$(git rev-parse --short ${{ github.sha }})"

          - name: Build and Push image
            run: |
              docker build -f Dockerfile -t rohitvuclip/${{ github.event.repository.name }}:${{ steps.commit_hash.outputs.hash }} .
              docker push rohitvuclip/${{ github.event.repository.name }}:${{ steps.commit_hash.outputs.hash }}

          - name: Store Commit ID as Artifact
            uses: actions/upload-artifact@v2
            with:
              name: commit-id
              path: commit-id.txt

      - name: Deployment - Deploy to Development and Production
        if: github.event_name == 'push'
        needs: build_and_deploy
        runs-on: ubuntu-latest

        strategy:
          matrix:
            environment: ['development', 'production']

        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Download Commit ID Artifact
            uses: actions/download-artifact@v2
            with:
              name: commit-id
              path: commit-id.txt

          - name: Read Commit ID from Artifact
            run: |
              COMMIT_ID=$(cat commit-id.txt)
              echo "Using commit ID: $COMMIT_ID"

          - name: Deploy to ${{ matrix.environment }}
            run: |
              echo "Deploying to ${{ matrix.environment }} environment"
              # Add your deployment steps here, e.g., kubectl apply

