name: Ruby CI pipeline
on:
  push:
    branches:
    - 'branch-test'
    - 'main'
jobs:
  build-and-push-to-registry:
    name: Build and Push to repo
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.commit_hash.outputs.hash }}
    steps:
      - name: Check our repository
        uses: actions/checkout@v3

      - name: testing
        run: echo "This is test" #ruby test

      - name: Login to Docker hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short commit hash
        id: commit_hash
        run: echo "::set-output name=hash::$(git rev-parse --short ${{ github.sha }})"

      - name: Build and Push image
        run: |
          docker build -f Dockerfile -t rohitvuclip/${{ github.event.repository.name }}:${{ steps.commit_hash.outputs.hash }} .
          docker push rohitvuclip/${{ github.event.repository.name }}:${{ steps.commit_hash.outputs.hash }}
          
      # - name: Run Tests in Docker Container
      #   run: docker run -i --rm rohitvuclip/${{ github.event.repository.name }}:${{ steps.commit_hash.outputs.hash }} echo "hello"

  deploy_development:
    needs: build-and-push-to-registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/branch-test'
    environment: development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          version: 'latest'

      - name: Deploy
        env:
          DB_USER: ${{ secrets.DB_USER }}
          COMMIT_ID: ${{ needs.build-and-push-to-registry.outputs.commit_id }}
        run: |
          #kubectl apply -f manifests/main.yaml
          echo "value read is $COMMIT_ID"
        

  deploy_production:
    needs: build-and-push-to-registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          version: 'latest'

      - name: Deploy to Production
        env:
          DB_USER: ${{ secrets.DB_USER }}
          COMMIT_ID: ${{ needs.build-and-push-to-registry.outputs.commit_id }}
        run: |
          #kubectl apply -f manifests/production.yaml
          echo "value read is $COMMIT_ID"

    
      
